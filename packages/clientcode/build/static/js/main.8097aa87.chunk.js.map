{"version":3,"sources":["helpers/axios.js","components/Signup/Signup.js","components/Login/Login.js","components/WorkerDashboard/WorkerDashboard.js","components/ManagerDashboard/ManagerDashboard.js","Routes.js","components/Headers/Header.js","HOC/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","headers","localStorage","getItem","Authorization","console","log","axiosInstance","axios","create","interceptors","request","use","config","error","Promise","reject","response","status","data","msg","clear","validEmailRegex","RegExp","Signup","props","handleChange","event","preventDefault","target","name","value","errors","state","fullName","length","email","test","password","setState","role","this","post","query","variables","then","result","catch","err","className","noValidate","htmlFor","type","onChange","onClick","createUser","history","push","React","Component","validateForm","valid","Object","values","forEach","val","Login","handleSubmit","a","info","loginResponse","getUser","isValidUser","setItem","_id","alert","get","user_code","res","WorkerDashboard","taskLists","editTask","taskStatus","listTask","currentTask","work","fetchTaskLists","task","AxiosInstance","id","workerid","getWorkerTask","entries","map","index","mappedName","deadline","title","desc","key","Date","toLocaleDateString","approvalStatus","handleEditChange","style","width","height","valaue","rows","submitTask","ManagerDashboard","existingTasks","isShowTaskRecord","endDate","assignedTo","assignedBy","createdBy","showApproval","taskToBeEdited","approvalRemarks","workerLists","tasksData","getTask","workerData","fetchWorkerList","date","taskRecord","evaluationRemarks","float","addTask","taskEvaluation","selected","handleDateChange","worker","NoMatch","location","pathname","Routes","path","exact","component","SignUp","Header","color","to","Layout","children","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8097aa87.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default (history = null) => {\n  const baseURL = 'http://localhost:5000/';\n\n\n  let headers = {};\n\n  if (localStorage.getItem('token')) {\n    headers.Authorization = `Bearer ${localStorage.getItem('token')}`;\n  }\n  console.log('baseurl',baseURL,'heders',headers)\n  const axiosInstance = axios.create({\n    baseURL: baseURL,\n    headers,\n  });\n\n  axiosInstance.interceptors.request.use(function (config) {\n  console.log('config--',config)\n  if(localStorage.getItem('token'))\n   config.headers.Authorization =   `Bearer ${localStorage.getItem('token')}`;\n    return config;\n  }, function (error) {\n    return Promise.reject(error);\n  });\n\n  axiosInstance.interceptors.response.use(function (response) {\n    console.log('response from API',response)\n    return response;\n  }, function (error) {\n    console.log('Http Error',error.response)\n    if (error.response.status == 401) {\n      let msg = 'Authentication error';\n      console.log('Authentication error',error.response.data.msg)\n      localStorage.clear();\n      // this.route.navigate(['/auth/login']);\n    }\n    else if (error.response.status == 403) {\n      console.log('Unauthorized request',error.response.data.msg)\n      let msg = ''\n      localStorage.clear();\n      // this.route.navigate(['/auth/login']);\n  }\n    return Promise.reject(error.response.status);\n  });\n\n  return axiosInstance;\n};","\nimport React from 'react';\nimport  './Signup.css';\nimport axiosInstance from '../../helpers/axios';\nconst validEmailRegex = RegExp(\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n);\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nexport default class Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullName: null,\n      email: null,\n      password: null,\n      role:'',\n      errors: {\n        fullName: '',\n        email: '',\n        password: '',\n      }\n    };\n  }\n\n  handleChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n\n    switch (name) {\n      case 'fullName': \n        errors.fullName = \n          value.length <= 0\n            ? 'Full Name is required!'\n            : '';\n        break;\n      case 'email': \n        errors.email = \n          validEmailRegex.test(value)\n            ? ''\n            : 'Email is not valid!';\n        break;\n      case 'password': \n        errors.password = \n          value.length < 8\n            ? 'Password must be at least 8 characters long!'\n            : '';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({errors, [name]: value});\n  }\n\n  // handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   if(validateForm(this.state.errors)) {\n  //     console.info('Valid Form')\n  //   }else{\n  //     console.error('Invalid Form')\n  //   }\n  // }\n  createUser(event){\n    event.preventDefault();\n    console.log('inside')\n    const {fullName,password,role,email}=this.state\n    console.log('name',fullName,'pwd',password,'role',role,'em',email)\n    axiosInstance()\n    .post(\"http://localhost:5000/graphql\",\n    {\n     \n        query: `            \n              mutation($email:String,$password:String,$name:String,$role:String){\n                createUser(email:$email,password:$password,name:$name,role:$role){\n                  name,email\n                }\n            }\n        `,\n        variables:{\n          email:this.state.email,\n          password:this.state.password,\n          role:this.state.role,\n          name:this.state.fullName\n        }\n    }).then((result)=>{\n     console.log('signup resu',result)\n    })\n   .catch((err)=>{\n     console.log('signup err',err)\n   })\n  }\n\n  render() {\n    const {errors} = this.state;\n    return (\n      <div className=\"wrapper\">\n        <div className='form-wrapper'>\n          <h2>Create Account</h2>\n          <form  noValidate>\n            <div className=\"fullName\">\n              <label htmlFor=\"fullName\">Full Name</label>\n              <input type='text' name='fullName' onChange={this.handleChange} noValidate />\n              {errors.fullName.length > 0 && \n                <span className='error'>{errors.fullName}</span>}\n            </div>\n            <div className='email'>\n              <label htmlFor=\"email\">Email</label>\n              <input type='email' name='email' onChange={this.handleChange} noValidate />\n              {errors.email.length > 0 && \n                <span className='error'>{errors.email}</span>}\n            </div>\n            <div className='password'>\n              <label htmlFor=\"password\">Password</label>\n              <input type='password' name='password' onChange={this.handleChange} noValidate />\n              {errors.password.length > 0 && \n                <span className='error'>{errors.password}</span>}\n            </div>          \n            <div className=\"role\">\n                <label htmlFor=\"role\">Role</label>\n                <select onChange={(event)=>{\n                  event.preventDefault();\n                  console.log('evenr',event.target.value)\n                  const {name,value}= event.target\n                    this.setState({role:value})\n                }} >\n                  <option name=\"select\" value=\"null\"></option>\n                  <option name=\"manager\" value=\"manager\">Manager</option>\n                  <option name=\"worker\" value=\"worker\">Worker</option>\n                </select>             \n              </div>\n\n            <div className='submit'>\n              <button onClick={(event)=>{\n                this.createUser(event)\n              }\n              }>Sign up</button>\n              <div className='signup'>\n                <label className='cursor' onClick={()=>{\n                  this.props.history.push('/login')\n                }\n                  \n                }>Login</label>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","\nimport React from 'react';\nimport axios from 'axios';\nimport  './Login.css';\nimport axiosInstance from '../../helpers/axios'\nconst validEmailRegex = RegExp(\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n);\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullName: null,\n      email: null,\n      password: null,\n      errors: {\n        fullName: '',\n        email: '',\n        password: '',\n      }\n    };\n  }\n\n  handleChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n    console.log('taget val',event.target.value,'name',event.target.name)\n\n    switch (name) {\n      case 'fullName': \n        errors.fullName = \n          value.length <= 0\n            ? 'Full Name is required!'\n            : '';\n        break;\n      case 'email': \n        errors.email = \n          validEmailRegex.test(value)\n            ? ''\n            : 'Email is not valid!';\n        break;\n      case 'password': \n        errors.password = \n          value.length < 8\n            ? 'Password must be at least 8 characters long!'\n            : '';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({errors, [name]: value});\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    if(validateForm(this.state.errors)) {\n      console.info('Valid Form email',this.state.email,'pwd',this.state.password)\n\n    axiosInstance()\n    .post(\"http://localhost:5000/graphql\",\n    {\n        query: `            \n              query($email:String,$password:String){\n                getUser(email:$email,password:$password){\n                  _id,email,isValidUser,role\n                }\n            }            \n        `,\n        variables:{\n          email:this.state.email,\n          password:this.state.password\n        }\n    }).then((result)=>{\n      console.log('result axios',result)\n      let loginResponse=result.data.data.getUser[0]\n      console.log('login response',loginResponse)\n      if(loginResponse.isValidUser && loginResponse.role=='worker'){\n        localStorage.setItem('role',loginResponse.role)\n        localStorage.setItem('ID',loginResponse._id)\n        this.props.history.push('/Workerdashboard')\n\n      }\n      else if(loginResponse.isValidUser && loginResponse.role=='manager')\n        this.props.history.push('/Managerdashboard')\n      else\n        alert('Invalid Credentials')\n    })\n    }else{\n      console.error('Invalid Form')\n    }\n    \n  //   axios({\n  //     method: 'get',\n  //     url: 'http://localhost:5000/login',\n  //     // data: formData,\n  //     headers: { 'user_code': 'shobana@gmail.com','password':'admin123'}\n  // })\n  // .then(function (response) {\n  //   console.log('response from Login BE',response)\n  // })\n  // .catch(function (response) {\n  //     //handle error\n  //     console.log('error resppp',response)\n  // });\n  // axios({\n  //   url:'http://localhost:5000/graphql',\n  //   method: 'get',\n  //   // 'Content-Type': 'application / json',\n  // //   headers: new Headers({\n  // //     'Content-Type': 'application/json',\n  // //     'Accept': 'application/json',\n  // // }),\n  // data: JSON.stringify({query}),\n  //   // data: {\n     \n  //   // query:`query {\n  //   //   events{\n  //   //   name,_id,password,email\n  //   //   }}`\n  //   // }\n\n  // }).then((result) => {\n  //   console.log(result.data)\n  // })\n  // .catch((err)=>{\n  //   console.log('axios GET err',err)\n  // })\n  }\ntest=(event)=>{\n  event.preventDefault();\n  axiosInstance()\n  .get(\"login/test\",\n  {\n    headers:{\n    user_code:'shobana@gmail.com',\n    password:'admin123'}\n  })\n  .then((res) => {\n    console.log('response ',res)\n   \n  })\n  .catch((err)=>{\n    console.log('error--',err)\n  })\n}\n  render() {\n    const {errors} = this.state;\n    return (\n      <div className=\"wrapper\">\n        <div className='form-wrapper'>\n          <h2>Login</h2>\n          <form  noValidate>            \n            <div className='email'>\n              <label htmlFor=\"email\">Email</label>\n              <input type='email' name='email' onChange={this.handleChange} noValidate />\n                {errors.email.length > 0 && \n                <span className='error'>{errors.email}</span>}\n            </div>\n            <div className='password'>\n              <label htmlFor=\"password\">Password</label>\n                <input type='password' name='password' onChange={this.handleChange} noValidate />\n              {errors.password.length > 0 && \n                <span className='error'>{errors.password}</span>}\n            </div>\n            <div className='submit'>\n              <button onClick={this.handleSubmit}>Login</button>\n            </div>\n            <div className='signup'>\n            <label className='cursor' onClick={()=>{\n                  this.props.history.push('/signup')\n                }                  \n                }>Signup</label>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport  './WorkerDashboard.css';\nimport AxiosInstance from '../../helpers/axios'\nexport default class WorkerDashboard extends React.Component{\nconstructor(props){\n  super(props);\n  this.state={\n   taskLists:[],\n   editTask:false,\n   taskStatus:'',\n   listTask:true,\n   currentTask:{},\n   work:''\n  }\n}\n  componentDidMount(){\n  console.log('loc',localStorage.getItem('ID'))\n  this.fetchTaskLists()\n  }\n  handleEditChange(event,task){\n    console.log('current task',task)\n    this.setState({editTask:true,listTask:false,currentTask:task})\n  }\n  handleChange(event){\n    console.log('event',event)\n  }\n  submitTask(){\n    // console.log('task id--',this.state.currentTask._id,'task status',this.state.taskStatus)\n  AxiosInstance()\n  .post(\"http://localhost:5000/graphql\",\n  {\n      query: `          \n      mutation($id:String,$taskStatus:String,\n        $work:String){\n        workerTaskUpload(input:{taskStatus:$taskStatus,\n        work:$work},\n        taskId:$id) \n      }          \n    `,\n    variables:{\n      id:this.state.currentTask._id,\n      taskStatus:this.state.taskStatus,\n      work:this.state.work,        \n    }\n  })  \n  .then((result) => {\n    // console.log('response ',result.data)\n    this.setState({editTask:false,listTask:true})\n    this.fetchTaskLists(); \n    // this.setState({task:result.data.data.getWorkerTask})  \n  })\n  .catch((err)=>{\n    console.log('error--',err)\n  })\n}\n  //   this.fetchTaskLists()\n  // }\n  fetchTaskLists(){\n    AxiosInstance()\n    .post(\"http://localhost:5000/graphql\",\n    {\n        query: `          \n              query($workerid:String) {\n                getWorkerTask(id:$workerid){\n                  _id,mappedName,assignedBy,desc,title,deadline,task {\n                    approvalStatus\n                    taskStatus\n                    work                \n                  }\n                }                          \n            }\n        `,\n        variables:{\n          workerid:localStorage.getItem('ID')\n        }\n    })  \n    .then((result) => {\n      console.log('tasklist response----------> ',result.data.data.getWorkerTask) \n      this.setState({taskLists:result.data.data.getWorkerTask})  \n    })\n    .catch((err)=>{\n      console.log('error--',err)\n    })\n  }\n  render(){\n    if(this.state.listTask && !this.state.editTask){\n    return(\n    <div className=\"card\">  \n    <label>  All Tasks</label>\n      <table className=\"table-position\">\n        <thead>\n        <tr>\n          <th>Title</th>\n          <th>Assigned By</th>\n          <th>Deadline</th>\n          <th>Working Status</th>\n          <th>Approval Status</th>\n          <th>View/Edit</th>\n        </tr>\n        </thead>\n        <tbody>\n        \n        {this.state.taskLists.length>1?Object.entries(this.state.taskLists)\n        .map(([index, { mappedName, deadline, desc,title,task }]) => (\n          <tr key={index}>\n              <td>{title}</td>\n              <td>{mappedName}</td>\n              <td>{new Date(+deadline).toLocaleDateString()}</td>\n              {/* <td>{deadline}</td> */}\n              <td>{task?.taskStatus||'Not Started'}</td>\n              <td>{task?.approvalStatus || 'Pending'}</td>\n              <td><button  onClick={(event)=>{this.handleEditChange(event,this.state.taskLists[index])}}>Edit</button></td>\n          </tr>\n        )):<div>\"No tasks assigned\"</div>}\n          </tbody>          \n      </table>    \n    </div>\n    )\n    }\n    else if(this.state.editTask && !this.state.listTask){\n      return (\n        <div className=\"custom-card\">\n          <div>\n            <h2 style={{\"paddingLeft\":\"10px\"}}>Task Details</h2>\n            <div className=\"form-control\">\n                  <label htmlFor=\"title\">Title: {this.state.currentTask.title}</label>\n              </div>\n              <div className=\"form-control\">\n                  <label htmlFor=\"title\">Assigned By: {this.state.currentTask.mappedName}</label>\n              </div>\n              <div className=\"form-control\">\n                  <label htmlFor=\"title\">Deadline: {new Date(+this.state.currentTask.deadline).toLocaleDateString()}</label>\n              </div>\n              <div className=\"form-control\">\n                  <label htmlFor=\"title\">Task Status: {this.state.currentTask.task.taskStatus}</label>\n              </div>\n              <div className=\"form-control\">\n                  <label htmlFor=\"title\">Approval Status: {this.state.currentTask.task.approvalStatus}</label>\n              </div>\n              <div className=\"form-control\">\n                  <label htmlFor=\"title\">Description: {this.state.currentTask.desc}</label>\n              </div>\n          </div>\n          <div>\n            <h2 style={{\"padding-left\":\"10px\"}}>Work Progress</h2>\n            <div className=\"form-control\">\n                <label htmlFor=\"evaluationRemarks\">Work Status</label>\n                <select style={{width:\"25%\",height:\"30px\"}} onChange={\n                  (event)=>{\n                    event.preventDefault();\n                    this.setState({taskStatus:event.target.value})\n                  }\n                }>\n                  <option name=\"select\" value=\"null\"></option>\n                  <option value=\"In-progress\">In-Progress</option>\n                  <option valaue=\"completed\">Completed</option>\n                </select>             \n            </div>\n            <div className=\"form-control\">\n                  <label htmlFor=\"evaluationRemarks\">Work Done</label>\n                  <textarea name=\"evaluationRemarks\" rows=\"3\" style={{width: \"25%\"}}                                   \n                  onChange={(event)=>{\n                  event.preventDefault();\n                  this.setState({work:event.target.value})}}/>             \n              </div>\n          </div>\n          <div className=\"btn-grp\">\n            <button onClick={()=>this.submitTask()}>Submit for approval</button>\n            <button onClick={()=>{\n              this.setState({editTask:false,listTask:true})\n            }}>Cancel</button>\n            {/* <button onClick={()=>{\nconsole.log('edit sttae',this.state.editTask,'list,',this.state.listTask,'assk',this.state.taskLists)\n            }}>Test</button> */}\n          </div>\n        </div>\n      )\n    }\n  }\n}","import React from 'react';\nimport  './ManagerDashboard.css';\nimport AxiosInstance from '../../helpers/axios'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default class ManagerDashboard extends React.Component{\nconstructor(props){\n  super(props);\n  this.state={\n    existingTasks:[],\n    isShowTaskRecord:true,\n    endDate:'',\n    title:'',\n    assignedTo:'',\n    desc:'',\n    assignedBy:'',\n    deadline:'',\n    createdBy:'',\n    showApproval:false,\n    taskToBeEdited:{},\n    approvalRemarks:'',\n    workerLists:[]\n  }\n}\ncomponentDidMount(){\nAxiosInstance()\n  .post(\"http://localhost:5000/graphql\",\n  {\n      // query: `\n      //     {\n      //       getTask {\n      //         _id,mappedName,createdBy,assignedTo,desc,title,deadline,task {              \n      //           approvalStatus\n      //           taskStatus\n      //           work                \n      //         }\n            \n      //       }\n      //     }\n      // `\n      query:`query($workerid:String) {\n        getWorkerTask(id:$workerid){\n          _id,mappedName,assignedBy,desc,title,deadline,task {\n            approvalStatus\n            taskStatus\n            work                \n          }\n        }                          \n    }`,\n    variables:{\n      workerid:localStorage.getItem('ID')\n    }\n  })  \n  .then((result) => {\n    console.log('task response----> ',result)   \n    let tasksData=result.data.data.getTask\n    this.setState({existingTasks:tasksData})\n  })\n  .catch((err)=>{\n    console.log('error--',err)\n  })\n  AxiosInstance()\n  .post(\"http://localhost:5000/graphql\",\n  {\n      query: `\n          {\n            fetchWorkerList {\n             _id ,\n             name\n            }\n          }\n      `\n  })  \n  .then((result) => {\n    console.log('response worker',result)   \n    let workerData=result.data.data.fetchWorkerList\n    this.setState({workerLists:workerData})\n  })\n  .catch((err)=>{\n    console.log('error--',err)\n  })\n  }\n\naddTask(){\n  console.log('add task')\n  this.setState({isShowTaskRecord:false})\n  }\n\n  handleDateChange(date){\n    console.log('date--',date)\n    this.setState({endDate:date})\n  }\n\n  handleChange(event){\n    event.preventDefault();\n    console.log('event target',event.target.name,'value',event.target.value)\n    const {name,value}=event.target\n    this.setState({[name]: value})\n  }\n  handleSubmit(event){\n    event.preventDefault();\n    console.log('assigned to',this.state.assignedTo)\n    AxiosInstance()\n    .post(\"http://localhost:5000/graphql\",\n    {     \n      query: `                      \n            mutation($title:String,$desc:String,$assignedBy:ID,              \n              $assignedTo:ID,$deadline:String,$createdBy:String,\n              $task:taskRecordInput){\n              createTask(input:{title:$title,\n              desc:$desc,assignedBy:$assignedBy,              \n              assignedTo:$assignedTo,deadline:$deadline,createdBy:$createdBy,\n              task:$task}) {title}\n            }          \n      `,\n      variables:{\n        title:this.state.title,\n        assignedTo:this.state.assignedTo,\n        desc:this.state.desc,\n        assignedBy:localStorage.getItem('ID'),\n        deadline:this.state.endDate,\n        createdBy:this.state.createdBy,\n        task:{\n          approvalStatus:\"Pending\",\n          taskStatus:\"Not Started\",\n        }\n      }\n  })  \n  .then((result) => {\n    console.log('response ',result.data)   \n    // let tasksData=result.data.data.getTask\n    // this.setState({existingTasks:tasksData})\n  })\n  .catch((err)=>{\n    console.log('error--',err)\n  })\n    console.log('submit evnt',event)\n\n  }\n  handleremarkChange(event){\n\n  }\n  handleEditChange(event,task){\n      event.preventDefault()\n      console.log('editt task',task,'event',event)      \n      this.setState({showApproval:true,isShowTaskRecord:false,taskToBeEdited:task})\n  }\n\n  taskEvaluation(event,approvalStatus,taskRecord){\n    event.preventDefault()\n    console.log('approval sttaus',approvalStatus,'remarks',this.state.approvalRemarks)\n    AxiosInstance()\n    .post(\"http://localhost:5000/graphql\",\n    {     \n      query: `                      \n            mutation($id:String,$approvalStatus:String,\n              $evaluationRemarks:String){\n              managerTaskApproval(input:{approvalStatus:$approvalStatus,\n              evaluationRemarks:$evaluationRemarks},\n              taskId:$id) \n            }          \n      `,\n      variables:{\n        id:this.state.taskToBeEdited._id,\n        approvalStatus:approvalStatus,\n        evaluationRemarks:this.state.approvalRemarks,        \n      }\n  })  \n  .then((result) => {\n    console.log('response ',result.data)   \n    // let tasksData=result.data.data.getTask\n    // this.setState({existingTasks:tasksData})\n  })\n  .catch((err)=>{\n    console.log('error--',err)\n  })\n  }\n\nrender(){\n  if(this.state.isShowTaskRecord && !this.state.showApproval){\n  return (\n  <div className=\"card\">  \n  <button style={{\"min-width\":'10%',float:\"right\",\"margin-bottom\":\"10px\"}} onClick={()=>this.addTask()}>Add Task</button>\n    <table className=\"table-position\">\n      <thead>\n      <tr>\n        <th>Title</th>\n        <th>Assigned To</th>\n        <th>Deadline</th>\n        <th>Working Status</th>\n        <th>Approval Status</th>\n        <th>View/Edit</th>\n      </tr>\n      </thead>\n      <tbody>\n      {this.state.existingTasks?Object.entries(this.state.existingTasks)\n      .map(([index, { createdBy, deadline,mappedName, desc,title,task }]) => (\n        <tr key={index}>\n            <td>{title}</td>\n            <td>{mappedName}</td>\n            <td>{new Date(+deadline).toLocaleDateString()}</td>\n            {/* <td>{deadline}</td> */}\n            <td>{task?.taskStatus||'NA'}</td>\n            <td>{task?.approvalStatus}</td>\n            <td><button onClick={(event)=>{this.handleEditChange(event,this.state.existingTasks[index])}}>Edit</button></td>\n        </tr>\n      )):<div>\"No Task assigned\"</div>}\n        </tbody>          \n    </table>    \n    \n\n  </div>\n  )\n }\n else if(!this.state.isShowTaskRecord && !this.state.showApproval){\n  return (\n  <div className=\"card\">\n    Create Task \n    <form  noValidate>            \n      <div className='form-control'>\n        <label htmlFor=\"title\">Title</label>\n        <input type='text'\n         name='title' onChange={(event)=>this.handleChange(event)} noValidate />\n        {/* {errors.email.length > 0 && \n        <span className='error'>{errors.email}</span>} */}\n      </div>\n      <div className='form-control'>\n        <label htmlFor=\"deadline\">Task end date</label>\n        <DatePicker\n        selected={this.state.endDate}\n        onChange={(date)=>this.handleDateChange(date)}\n      />\n\n        {/* <input type='text' name='deadline' onChange={this.handleChange} noValidate />         */}\n      </div>\n      <div className='form-control'>\n        <label htmlFor=\"assignedTo\">Assigned to</label>\n        <select onChange={(event)=>{\n                  event.preventDefault();\n                  console.log('evenr',event.target.value)\n                  const {value}= event.target\n                    this.setState({assignedTo:value})\n                }} >\n                  {/* <option name=\"select\" value=\"null\"></option>\n                  <option name=\"manager\" value=\"manager\">Manager</option>\n                  <option name=\"worker\" value=\"worker\">Worker</option> */}\n        {this.state.workerLists\n        .map((worker) => (\n        <option key={worker._id} value={worker._id}>{worker.name}</option>))}\n               </select>             \n              </div>\n        {/* <input type='text' name='assingedTo' onChange={(event)=>this.handleChange(event)} noValidate />          */}\n\n      {/* </div>     */}\n        <div className='form-control'>\n        <label htmlFor=\"desc\">Description</label>\n        <input type='text' name='desc' onChange={(event)=>this.handleChange(event)} noValidate />\n         {/* {errors.password.length > 0 && \n        <span className='error'>{errors.password}</span>} */}\n      </div>\n      <div className='submit'>\n      <button className=\"\" onClick={(event)=>this.handleSubmit(event)}>Save</button>\n      <button className=\"\" onClick={()=>{\n          this.setState({isShowTaskRecord:true})\n          }}>Back</button>\n\n      </div>      \n    </form>\n        \n\n  </div>\n)                  \n  }\n  else if(this.state.showApproval && !this.state.isShowTaskRecord){\n   return(\n    <div className=\"approval-card\">        \n        <h2 className=\"align-label\"> Work Evaluation</h2> \n            <div className=\"form-control\">\n                <label htmlFor=\"title\">Title: {this.state.taskToBeEdited.title}</label>\n                {/* <label></label> */}\n            </div>\n            <div className=\"form-control\">\n                <label htmlFor=\"title\">Assigned To: {this.state.taskToBeEdited.mappedName}</label>\n            </div>\n            <div className=\"form-control\">\n                <label htmlFor=\"title\">Deadline: {new Date(+this.state.taskToBeEdited.deadline).toLocaleDateString()}</label>\n            </div>\n            <div className=\"form-control\">\n                <label htmlFor=\"title\">Work done: \"TO be added\"\n                {/* {this.state.taskToBeEdited.endDate} */}\n                </label>\n            </div>\n            <div className=\"form-control\">\n                <label htmlFor=\"title\">Task Status: {this.state.taskToBeEdited.task.taskStatus}</label>\n            </div>\n            <div className=\"form-control\">\n                <label htmlFor=\"title\">Approval Status: {this.state.taskToBeEdited.task.approvalStatus}</label>\n            </div>\n            <div className=\"form-control\">\n                <label htmlFor=\"title\">Description: {this.state.taskToBeEdited.desc}</label>\n            </div>\n            <div className=\"form-control\">\n                <label htmlFor=\"evaluationRemarks\">Remarks</label>\n                <textarea name=\"evaluationRemarks\" rows=\"3\" style={{width: \"25%\"}}                                   \n                 onChange={(event)=>\n                this.setState({approvalRemarks:event.target.value})}\n                ></textarea>                \n            </div>\n            <div className=\"btn-grp\">\n                <button onClick={(event)=>this.taskEvaluation(event,'approved')}>Approve</button>\n                <button onClick={(event)=>this.taskEvaluation(event,'rejected')}>Reject </button>\n                <button onClick={(event)=>this.setState({showApproval:false,isShowTaskRecord:true})}>Back</button>\n            </div>\n    </div>\n\n   )\n  }\n}\n}","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// import CreateUser from './components/User/CreateUser';\n// import HomePage from './components/HomePage/Home'\nimport SignUp from './components/Signup/Signup'\nimport Login from './components/Login/Login'\nimport WorkerDashboard from './components/WorkerDashboard/WorkerDashboard'\nimport ManagerDashboard from './components/ManagerDashboard/ManagerDashboard';\n\nconst NoMatch = ({ location }) => (\n  <div>\n    <h3>No match for <code>{location.pathname}</code></h3>\n  </div>\n);\nconst Routes = () => (\n  <Switch>\n    <Route path=\"/\" exact component={WorkerDashboard} />\n    <Route path=\"/SignUp\" exact component={SignUp} />\n    <Route path=\"/Workerdashboard\" exact component={WorkerDashboard} />\n    <Route path=\"/Managerdashboard\" exact component={ManagerDashboard} />\n    <Route path=\"/login\" exact component={Login} />\n    <Route component={NoMatch} />\n</Switch>\n);\n\nexport default Routes;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './Header.css';\n\nconst Header = (props)=>{\n    return (\n        <div className=\"header\">\n            <div className=\"headerElement\">\n                <h2 style={{color:\"white\"}}>Task Tracker</h2>\n                <div className=\"moveCenter\">\n                    {/* {localStorage.getItem('token')? */}\n                    {true?\n                    <Link to=\"/login\" className=\"btn btn-linkn\">Log out</Link>:\"\"}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Header;","import React from 'react';\nimport '../../components/Headers/Header';\nimport Header from '../../components/Headers/Header';\n\nconst Layout = (props)=>{\n    return (\n       <div>\n\n           <Header/>\n           <div style={{width:\"-webkit-fill-available\"}}>{props.children}</div>\n       </div>\n    )\n}\nexport default Layout;","\nimport React from 'react';\nimport './App.css';\nimport Routes from './Routes'\nimport { BrowserRouter } from 'react-router-dom';\nimport Layout from './HOC/Layout/Layout'\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Layout/>\n     <Routes/>\n    </BrowserRouter>\n    // <Login/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}